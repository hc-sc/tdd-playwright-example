/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/// <reference types="node" />
import { TestError, TestStatus } from '../ipc';
import { Reporter, Config } from '../runner';
import { Test, Suite, TestResult, Parameters } from '../test';
export declare class BaseReporter implements Reporter {
    duration: number;
    config: Config;
    suite: Suite;
    timeout: number;
    fileDurations: Map<string, number>;
    monotonicStartTime: number;
    constructor();
    onBegin(config: Config, suite: Suite): void;
    onTestBegin(test: Test): void;
    onStdOut(chunk: string | Buffer): void;
    onStdErr(chunk: string | Buffer): void;
    onTestEnd(test: Test, result: TestResult): void;
    onError(error: TestError): void;
    onTimeout(timeout: number): void;
    onEnd(): void;
    private _printSlowTests;
    epilogue(full: boolean): void;
    private _printTestHeaders;
    private _printFailures;
    hasResultWithStatus(test: Test, status: TestStatus): boolean;
    willRetry(test: Test, result: TestResult): boolean;
}
export declare function formatFailure(config: Config, test: Test, index?: number): string;
export declare function serializeParameters(parameters: Parameters): string;
export declare function stripAscii(str: string): string;
//# sourceMappingURL=base.d.ts.map