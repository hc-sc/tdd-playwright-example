/**
 * Copyright 2019 Google Inc. All rights reserved.
 * Modifications copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ParameterRegistration } from './fixtures';
import { Reporter } from './reporter';
import { Suite } from './test';
export { Reporter } from './reporter';
export { Config } from './config';
export { Test, TestResult, Suite, TestStatus, TestError } from './test';
declare type RunResult = 'passed' | 'failed' | 'sigint' | 'forbid-only' | 'no-tests';
export declare class Runner {
    private _reporter;
    private _rootSuite;
    private _suites;
    constructor(reporter: Reporter);
    loadFiles(files: string[]): {
        parameters: Map<string, ParameterRegistration>;
    };
    generateTests(options?: {
        parameters?: {
            [key: string]: (string | boolean | number)[];
        };
    }): Suite;
    list(): void;
    run(): Promise<RunResult>;
    private _runTests;
}
//# sourceMappingURL=runner.d.ts.map